plugins {
    id "java"
    id "jigsaw"
    id 'com.gradleup.shadow'
    id "maven-publish"
}




loom {
    splitEnvironmentSourceSets()
    mods {
        "LaserstoneFixes" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
//    accessWidenerPath = file("src/main/resources/${id}.manipulator")
}

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    cosmicReach("finalforeach:cosmicreach:${cosmic_reach_version}")
//    implementation project(":common")
}
//tasks.named("compileClientJava") {
//    source(project(":common").sourceSets.main.allSource)
//}
//tasks.named("compileClientJava") {
//    source(project(":common").sourceSets.main.allJava)
//}

processResources {
    def resourceTargets = [ "puzzle.mod.json" ]

    // Left item is the name in the target, right is the variable name
    def replaceProperties = [
            "mod_version"     : project.version,
            "mod_group"       : project.group,
            "mod_name"        : rootProject.name,
            "mod_id"          : id,
    ]


    inputs.properties replaceProperties
    replaceProperties.put "project", project
    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}





//applicationDefaultJvmArgs = [
//        "-Dloader.development=true", // Allows stuff to be found through the classpath
//        "-Dloader.gameJarPath=" + configurations.cosmicreach.asPath, // Defines path to Cosmic Reach
//]

//run {
//    // To run this project in the game, depend on the creation of jar task
//    dependsOn "jar"
//
//    // Change the run directory
//    File runningDir = new File("run/")
//    if (!runningDir.exists())
//        runningDir.mkdirs()
//    tasks.run.workingDir = runningDir
//}




